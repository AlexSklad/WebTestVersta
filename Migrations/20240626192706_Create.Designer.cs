// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebTestVersta.Models;

#nullable disable

namespace WebTestVersta.Migrations
{
    [DbContext(typeof(SuppliesDbContext))]
    [Migration("20240626192706_Create")]
    partial class Create
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebTestVersta.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CargoWeight")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrderNum")
                        .HasMaxLength(20)
                        .HasColumnType("nchar(20)")
                        .IsFixedLength();

                    b.Property<DateTime>("PickupDate")
                        .HasColumnType("date");

                    b.Property<int>("RecId")
                        .HasColumnType("int")
                        .HasColumnName("RecID");

                    b.Property<int>("SenderId")
                        .HasColumnType("int")
                        .HasColumnName("SenderID");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC07B0749FA1");

                    b.HasIndex("RecId");

                    b.HasIndex("SenderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WebTestVersta.Models.Recipient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RecAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RecCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC073A34F04B");

                    b.HasIndex(new[] { "RecAddress" }, "UQ__Recipien__2CB74F3B5F3A8B1E")
                        .IsUnique();

                    b.ToTable("Recipients");
                });

            modelBuilder.Entity("WebTestVersta.Models.Sender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SenderAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SenderCity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__tmp_ms_x__3214EC0710339CA3");

                    b.HasIndex(new[] { "SenderAddress" }, "UQ__Senders__DF28C57E3E6D9496")
                        .IsUnique();

                    b.ToTable("Senders");
                });

            modelBuilder.Entity("WebTestVersta.Models.Order", b =>
                {
                    b.HasOne("WebTestVersta.Models.Recipient", "Rec")
                        .WithMany("Orders")
                        .HasForeignKey("RecId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__RecID__3A81B327");

                    b.HasOne("WebTestVersta.Models.Sender", "Sender")
                        .WithMany("Orders")
                        .HasForeignKey("SenderId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__SenderID__5AEE82B9");

                    b.Navigation("Rec");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("WebTestVersta.Models.Recipient", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("WebTestVersta.Models.Sender", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
